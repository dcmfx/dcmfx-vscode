/// <reference types="./iso_8859_5.d.mts" />
import * as $lookup_table_8bit from "../../dcmfx_character_set/internal/lookup_table_8bit.mjs";
import { toBitArray, sizedInt } from "../../gleam.mjs";

const lookup_table = /* @__PURE__ */ toBitArray([
  sizedInt(0x0, 16, true),
  sizedInt(0x1, 16, true),
  sizedInt(0x2, 16, true),
  sizedInt(0x3, 16, true),
  sizedInt(0x4, 16, true),
  sizedInt(0x5, 16, true),
  sizedInt(0x6, 16, true),
  sizedInt(0x7, 16, true),
  sizedInt(0x8, 16, true),
  sizedInt(0x9, 16, true),
  sizedInt(0xA, 16, true),
  sizedInt(0xB, 16, true),
  sizedInt(0xC, 16, true),
  sizedInt(0xD, 16, true),
  sizedInt(0xE, 16, true),
  sizedInt(0xF, 16, true),
  sizedInt(0x10, 16, true),
  sizedInt(0x11, 16, true),
  sizedInt(0x12, 16, true),
  sizedInt(0x13, 16, true),
  sizedInt(0x14, 16, true),
  sizedInt(0x15, 16, true),
  sizedInt(0x16, 16, true),
  sizedInt(0x17, 16, true),
  sizedInt(0x18, 16, true),
  sizedInt(0x19, 16, true),
  sizedInt(0x1A, 16, true),
  sizedInt(0x1B, 16, true),
  sizedInt(0x1C, 16, true),
  sizedInt(0x1D, 16, true),
  sizedInt(0x1E, 16, true),
  sizedInt(0x1F, 16, true),
  sizedInt(0x20, 16, true),
  sizedInt(0x21, 16, true),
  sizedInt(0x22, 16, true),
  sizedInt(0x23, 16, true),
  sizedInt(0x24, 16, true),
  sizedInt(0x25, 16, true),
  sizedInt(0x26, 16, true),
  sizedInt(0x27, 16, true),
  sizedInt(0x28, 16, true),
  sizedInt(0x29, 16, true),
  sizedInt(0x2A, 16, true),
  sizedInt(0x2B, 16, true),
  sizedInt(0x2C, 16, true),
  sizedInt(0x2D, 16, true),
  sizedInt(0x2E, 16, true),
  sizedInt(0x2F, 16, true),
  sizedInt(0x30, 16, true),
  sizedInt(0x31, 16, true),
  sizedInt(0x32, 16, true),
  sizedInt(0x33, 16, true),
  sizedInt(0x34, 16, true),
  sizedInt(0x35, 16, true),
  sizedInt(0x36, 16, true),
  sizedInt(0x37, 16, true),
  sizedInt(0x38, 16, true),
  sizedInt(0x39, 16, true),
  sizedInt(0x3A, 16, true),
  sizedInt(0x3B, 16, true),
  sizedInt(0x3C, 16, true),
  sizedInt(0x3D, 16, true),
  sizedInt(0x3E, 16, true),
  sizedInt(0x3F, 16, true),
  sizedInt(0x40, 16, true),
  sizedInt(0x41, 16, true),
  sizedInt(0x42, 16, true),
  sizedInt(0x43, 16, true),
  sizedInt(0x44, 16, true),
  sizedInt(0x45, 16, true),
  sizedInt(0x46, 16, true),
  sizedInt(0x47, 16, true),
  sizedInt(0x48, 16, true),
  sizedInt(0x49, 16, true),
  sizedInt(0x4A, 16, true),
  sizedInt(0x4B, 16, true),
  sizedInt(0x4C, 16, true),
  sizedInt(0x4D, 16, true),
  sizedInt(0x4E, 16, true),
  sizedInt(0x4F, 16, true),
  sizedInt(0x50, 16, true),
  sizedInt(0x51, 16, true),
  sizedInt(0x52, 16, true),
  sizedInt(0x53, 16, true),
  sizedInt(0x54, 16, true),
  sizedInt(0x55, 16, true),
  sizedInt(0x56, 16, true),
  sizedInt(0x57, 16, true),
  sizedInt(0x58, 16, true),
  sizedInt(0x59, 16, true),
  sizedInt(0x5A, 16, true),
  sizedInt(0x5B, 16, true),
  sizedInt(0x5C, 16, true),
  sizedInt(0x5D, 16, true),
  sizedInt(0x5E, 16, true),
  sizedInt(0x5F, 16, true),
  sizedInt(0x60, 16, true),
  sizedInt(0x61, 16, true),
  sizedInt(0x62, 16, true),
  sizedInt(0x63, 16, true),
  sizedInt(0x64, 16, true),
  sizedInt(0x65, 16, true),
  sizedInt(0x66, 16, true),
  sizedInt(0x67, 16, true),
  sizedInt(0x68, 16, true),
  sizedInt(0x69, 16, true),
  sizedInt(0x6A, 16, true),
  sizedInt(0x6B, 16, true),
  sizedInt(0x6C, 16, true),
  sizedInt(0x6D, 16, true),
  sizedInt(0x6E, 16, true),
  sizedInt(0x6F, 16, true),
  sizedInt(0x70, 16, true),
  sizedInt(0x71, 16, true),
  sizedInt(0x72, 16, true),
  sizedInt(0x73, 16, true),
  sizedInt(0x74, 16, true),
  sizedInt(0x75, 16, true),
  sizedInt(0x76, 16, true),
  sizedInt(0x77, 16, true),
  sizedInt(0x78, 16, true),
  sizedInt(0x79, 16, true),
  sizedInt(0x7A, 16, true),
  sizedInt(0x7B, 16, true),
  sizedInt(0x7C, 16, true),
  sizedInt(0x7D, 16, true),
  sizedInt(0x7E, 16, true),
  sizedInt(0xFFFD, 16, true),
  sizedInt(0x80, 16, true),
  sizedInt(0x81, 16, true),
  sizedInt(0x82, 16, true),
  sizedInt(0x83, 16, true),
  sizedInt(0x84, 16, true),
  sizedInt(0x85, 16, true),
  sizedInt(0x86, 16, true),
  sizedInt(0x87, 16, true),
  sizedInt(0x88, 16, true),
  sizedInt(0x89, 16, true),
  sizedInt(0x8A, 16, true),
  sizedInt(0x8B, 16, true),
  sizedInt(0x8C, 16, true),
  sizedInt(0x8D, 16, true),
  sizedInt(0x8E, 16, true),
  sizedInt(0x8F, 16, true),
  sizedInt(0x90, 16, true),
  sizedInt(0x91, 16, true),
  sizedInt(0x92, 16, true),
  sizedInt(0x93, 16, true),
  sizedInt(0x94, 16, true),
  sizedInt(0x95, 16, true),
  sizedInt(0x96, 16, true),
  sizedInt(0x97, 16, true),
  sizedInt(0x98, 16, true),
  sizedInt(0x99, 16, true),
  sizedInt(0x9A, 16, true),
  sizedInt(0x9B, 16, true),
  sizedInt(0x9C, 16, true),
  sizedInt(0x9D, 16, true),
  sizedInt(0x9E, 16, true),
  sizedInt(0x9F, 16, true),
  sizedInt(0xA0, 16, true),
  sizedInt(0x401, 16, true),
  sizedInt(0x402, 16, true),
  sizedInt(0x403, 16, true),
  sizedInt(0x404, 16, true),
  sizedInt(0x405, 16, true),
  sizedInt(0x406, 16, true),
  sizedInt(0x407, 16, true),
  sizedInt(0x408, 16, true),
  sizedInt(0x409, 16, true),
  sizedInt(0x40A, 16, true),
  sizedInt(0x40B, 16, true),
  sizedInt(0x40C, 16, true),
  sizedInt(0xAD, 16, true),
  sizedInt(0x40E, 16, true),
  sizedInt(0x40F, 16, true),
  sizedInt(0x410, 16, true),
  sizedInt(0x411, 16, true),
  sizedInt(0x412, 16, true),
  sizedInt(0x413, 16, true),
  sizedInt(0x414, 16, true),
  sizedInt(0x415, 16, true),
  sizedInt(0x416, 16, true),
  sizedInt(0x417, 16, true),
  sizedInt(0x418, 16, true),
  sizedInt(0x419, 16, true),
  sizedInt(0x41A, 16, true),
  sizedInt(0x41B, 16, true),
  sizedInt(0x41C, 16, true),
  sizedInt(0x41D, 16, true),
  sizedInt(0x41E, 16, true),
  sizedInt(0x41F, 16, true),
  sizedInt(0x420, 16, true),
  sizedInt(0x421, 16, true),
  sizedInt(0x422, 16, true),
  sizedInt(0x423, 16, true),
  sizedInt(0x424, 16, true),
  sizedInt(0x425, 16, true),
  sizedInt(0x426, 16, true),
  sizedInt(0x427, 16, true),
  sizedInt(0x428, 16, true),
  sizedInt(0x429, 16, true),
  sizedInt(0x42A, 16, true),
  sizedInt(0x42B, 16, true),
  sizedInt(0x42C, 16, true),
  sizedInt(0x42D, 16, true),
  sizedInt(0x42E, 16, true),
  sizedInt(0x42F, 16, true),
  sizedInt(0x430, 16, true),
  sizedInt(0x431, 16, true),
  sizedInt(0x432, 16, true),
  sizedInt(0x433, 16, true),
  sizedInt(0x434, 16, true),
  sizedInt(0x435, 16, true),
  sizedInt(0x436, 16, true),
  sizedInt(0x437, 16, true),
  sizedInt(0x438, 16, true),
  sizedInt(0x439, 16, true),
  sizedInt(0x43A, 16, true),
  sizedInt(0x43B, 16, true),
  sizedInt(0x43C, 16, true),
  sizedInt(0x43D, 16, true),
  sizedInt(0x43E, 16, true),
  sizedInt(0x43F, 16, true),
  sizedInt(0x440, 16, true),
  sizedInt(0x441, 16, true),
  sizedInt(0x442, 16, true),
  sizedInt(0x443, 16, true),
  sizedInt(0x444, 16, true),
  sizedInt(0x445, 16, true),
  sizedInt(0x446, 16, true),
  sizedInt(0x447, 16, true),
  sizedInt(0x448, 16, true),
  sizedInt(0x449, 16, true),
  sizedInt(0x44A, 16, true),
  sizedInt(0x44B, 16, true),
  sizedInt(0x44C, 16, true),
  sizedInt(0x44D, 16, true),
  sizedInt(0x44E, 16, true),
  sizedInt(0x44F, 16, true),
  sizedInt(0x2116, 16, true),
  sizedInt(0x451, 16, true),
  sizedInt(0x452, 16, true),
  sizedInt(0x453, 16, true),
  sizedInt(0x454, 16, true),
  sizedInt(0x455, 16, true),
  sizedInt(0x456, 16, true),
  sizedInt(0x457, 16, true),
  sizedInt(0x458, 16, true),
  sizedInt(0x459, 16, true),
  sizedInt(0x45A, 16, true),
  sizedInt(0x45B, 16, true),
  sizedInt(0x45C, 16, true),
  sizedInt(0xA7, 16, true),
  sizedInt(0x45E, 16, true),
  sizedInt(0x45F, 16, true),
]);

export function decode_next_codepoint(bytes) {
  return $lookup_table_8bit.decode_next_codepoint(bytes, lookup_table);
}
