/// <reference types="./iso_8859_4.d.mts" />
import * as $lookup_table_8bit from "../../dcmfx_character_set/internal/lookup_table_8bit.mjs";
import { toBitArray, sizedInt } from "../../gleam.mjs";

const lookup_table = /* @__PURE__ */ toBitArray([
  sizedInt(0x0, 16, true),
  sizedInt(0x1, 16, true),
  sizedInt(0x2, 16, true),
  sizedInt(0x3, 16, true),
  sizedInt(0x4, 16, true),
  sizedInt(0x5, 16, true),
  sizedInt(0x6, 16, true),
  sizedInt(0x7, 16, true),
  sizedInt(0x8, 16, true),
  sizedInt(0x9, 16, true),
  sizedInt(0xA, 16, true),
  sizedInt(0xB, 16, true),
  sizedInt(0xC, 16, true),
  sizedInt(0xD, 16, true),
  sizedInt(0xE, 16, true),
  sizedInt(0xF, 16, true),
  sizedInt(0x10, 16, true),
  sizedInt(0x11, 16, true),
  sizedInt(0x12, 16, true),
  sizedInt(0x13, 16, true),
  sizedInt(0x14, 16, true),
  sizedInt(0x15, 16, true),
  sizedInt(0x16, 16, true),
  sizedInt(0x17, 16, true),
  sizedInt(0x18, 16, true),
  sizedInt(0x19, 16, true),
  sizedInt(0x1A, 16, true),
  sizedInt(0x1B, 16, true),
  sizedInt(0x1C, 16, true),
  sizedInt(0x1D, 16, true),
  sizedInt(0x1E, 16, true),
  sizedInt(0x1F, 16, true),
  sizedInt(0x20, 16, true),
  sizedInt(0x21, 16, true),
  sizedInt(0x22, 16, true),
  sizedInt(0x23, 16, true),
  sizedInt(0x24, 16, true),
  sizedInt(0x25, 16, true),
  sizedInt(0x26, 16, true),
  sizedInt(0x27, 16, true),
  sizedInt(0x28, 16, true),
  sizedInt(0x29, 16, true),
  sizedInt(0x2A, 16, true),
  sizedInt(0x2B, 16, true),
  sizedInt(0x2C, 16, true),
  sizedInt(0x2D, 16, true),
  sizedInt(0x2E, 16, true),
  sizedInt(0x2F, 16, true),
  sizedInt(0x30, 16, true),
  sizedInt(0x31, 16, true),
  sizedInt(0x32, 16, true),
  sizedInt(0x33, 16, true),
  sizedInt(0x34, 16, true),
  sizedInt(0x35, 16, true),
  sizedInt(0x36, 16, true),
  sizedInt(0x37, 16, true),
  sizedInt(0x38, 16, true),
  sizedInt(0x39, 16, true),
  sizedInt(0x3A, 16, true),
  sizedInt(0x3B, 16, true),
  sizedInt(0x3C, 16, true),
  sizedInt(0x3D, 16, true),
  sizedInt(0x3E, 16, true),
  sizedInt(0x3F, 16, true),
  sizedInt(0x40, 16, true),
  sizedInt(0x41, 16, true),
  sizedInt(0x42, 16, true),
  sizedInt(0x43, 16, true),
  sizedInt(0x44, 16, true),
  sizedInt(0x45, 16, true),
  sizedInt(0x46, 16, true),
  sizedInt(0x47, 16, true),
  sizedInt(0x48, 16, true),
  sizedInt(0x49, 16, true),
  sizedInt(0x4A, 16, true),
  sizedInt(0x4B, 16, true),
  sizedInt(0x4C, 16, true),
  sizedInt(0x4D, 16, true),
  sizedInt(0x4E, 16, true),
  sizedInt(0x4F, 16, true),
  sizedInt(0x50, 16, true),
  sizedInt(0x51, 16, true),
  sizedInt(0x52, 16, true),
  sizedInt(0x53, 16, true),
  sizedInt(0x54, 16, true),
  sizedInt(0x55, 16, true),
  sizedInt(0x56, 16, true),
  sizedInt(0x57, 16, true),
  sizedInt(0x58, 16, true),
  sizedInt(0x59, 16, true),
  sizedInt(0x5A, 16, true),
  sizedInt(0x5B, 16, true),
  sizedInt(0x5C, 16, true),
  sizedInt(0x5D, 16, true),
  sizedInt(0x5E, 16, true),
  sizedInt(0x5F, 16, true),
  sizedInt(0x60, 16, true),
  sizedInt(0x61, 16, true),
  sizedInt(0x62, 16, true),
  sizedInt(0x63, 16, true),
  sizedInt(0x64, 16, true),
  sizedInt(0x65, 16, true),
  sizedInt(0x66, 16, true),
  sizedInt(0x67, 16, true),
  sizedInt(0x68, 16, true),
  sizedInt(0x69, 16, true),
  sizedInt(0x6A, 16, true),
  sizedInt(0x6B, 16, true),
  sizedInt(0x6C, 16, true),
  sizedInt(0x6D, 16, true),
  sizedInt(0x6E, 16, true),
  sizedInt(0x6F, 16, true),
  sizedInt(0x70, 16, true),
  sizedInt(0x71, 16, true),
  sizedInt(0x72, 16, true),
  sizedInt(0x73, 16, true),
  sizedInt(0x74, 16, true),
  sizedInt(0x75, 16, true),
  sizedInt(0x76, 16, true),
  sizedInt(0x77, 16, true),
  sizedInt(0x78, 16, true),
  sizedInt(0x79, 16, true),
  sizedInt(0x7A, 16, true),
  sizedInt(0x7B, 16, true),
  sizedInt(0x7C, 16, true),
  sizedInt(0x7D, 16, true),
  sizedInt(0x7E, 16, true),
  sizedInt(0xFFFD, 16, true),
  sizedInt(0x80, 16, true),
  sizedInt(0x81, 16, true),
  sizedInt(0x82, 16, true),
  sizedInt(0x83, 16, true),
  sizedInt(0x84, 16, true),
  sizedInt(0x85, 16, true),
  sizedInt(0x86, 16, true),
  sizedInt(0x87, 16, true),
  sizedInt(0x88, 16, true),
  sizedInt(0x89, 16, true),
  sizedInt(0x8A, 16, true),
  sizedInt(0x8B, 16, true),
  sizedInt(0x8C, 16, true),
  sizedInt(0x8D, 16, true),
  sizedInt(0x8E, 16, true),
  sizedInt(0x8F, 16, true),
  sizedInt(0x90, 16, true),
  sizedInt(0x91, 16, true),
  sizedInt(0x92, 16, true),
  sizedInt(0x93, 16, true),
  sizedInt(0x94, 16, true),
  sizedInt(0x95, 16, true),
  sizedInt(0x96, 16, true),
  sizedInt(0x97, 16, true),
  sizedInt(0x98, 16, true),
  sizedInt(0x99, 16, true),
  sizedInt(0x9A, 16, true),
  sizedInt(0x9B, 16, true),
  sizedInt(0x9C, 16, true),
  sizedInt(0x9D, 16, true),
  sizedInt(0x9E, 16, true),
  sizedInt(0x9F, 16, true),
  sizedInt(0xA0, 16, true),
  sizedInt(0x104, 16, true),
  sizedInt(0x138, 16, true),
  sizedInt(0x156, 16, true),
  sizedInt(0xA4, 16, true),
  sizedInt(0x128, 16, true),
  sizedInt(0x13B, 16, true),
  sizedInt(0xA7, 16, true),
  sizedInt(0xA8, 16, true),
  sizedInt(0x160, 16, true),
  sizedInt(0x112, 16, true),
  sizedInt(0x122, 16, true),
  sizedInt(0x166, 16, true),
  sizedInt(0xAD, 16, true),
  sizedInt(0x17D, 16, true),
  sizedInt(0xAF, 16, true),
  sizedInt(0xB0, 16, true),
  sizedInt(0x105, 16, true),
  sizedInt(0x2DB, 16, true),
  sizedInt(0x157, 16, true),
  sizedInt(0xB4, 16, true),
  sizedInt(0x129, 16, true),
  sizedInt(0x13C, 16, true),
  sizedInt(0x2C7, 16, true),
  sizedInt(0xB8, 16, true),
  sizedInt(0x161, 16, true),
  sizedInt(0x113, 16, true),
  sizedInt(0x123, 16, true),
  sizedInt(0x167, 16, true),
  sizedInt(0x14A, 16, true),
  sizedInt(0x17E, 16, true),
  sizedInt(0x14B, 16, true),
  sizedInt(0x100, 16, true),
  sizedInt(0xC1, 16, true),
  sizedInt(0xC2, 16, true),
  sizedInt(0xC3, 16, true),
  sizedInt(0xC4, 16, true),
  sizedInt(0xC5, 16, true),
  sizedInt(0xC6, 16, true),
  sizedInt(0x12E, 16, true),
  sizedInt(0x10C, 16, true),
  sizedInt(0xC9, 16, true),
  sizedInt(0x118, 16, true),
  sizedInt(0xCB, 16, true),
  sizedInt(0x116, 16, true),
  sizedInt(0xCD, 16, true),
  sizedInt(0xCE, 16, true),
  sizedInt(0x12A, 16, true),
  sizedInt(0x110, 16, true),
  sizedInt(0x145, 16, true),
  sizedInt(0x14C, 16, true),
  sizedInt(0x136, 16, true),
  sizedInt(0xD4, 16, true),
  sizedInt(0xD5, 16, true),
  sizedInt(0xD6, 16, true),
  sizedInt(0xD7, 16, true),
  sizedInt(0xD8, 16, true),
  sizedInt(0x172, 16, true),
  sizedInt(0xDA, 16, true),
  sizedInt(0xDB, 16, true),
  sizedInt(0xDC, 16, true),
  sizedInt(0x168, 16, true),
  sizedInt(0x16A, 16, true),
  sizedInt(0xDF, 16, true),
  sizedInt(0x101, 16, true),
  sizedInt(0xE1, 16, true),
  sizedInt(0xE2, 16, true),
  sizedInt(0xE3, 16, true),
  sizedInt(0xE4, 16, true),
  sizedInt(0xE5, 16, true),
  sizedInt(0xE6, 16, true),
  sizedInt(0x12F, 16, true),
  sizedInt(0x10D, 16, true),
  sizedInt(0xE9, 16, true),
  sizedInt(0x119, 16, true),
  sizedInt(0xEB, 16, true),
  sizedInt(0x117, 16, true),
  sizedInt(0xED, 16, true),
  sizedInt(0xEE, 16, true),
  sizedInt(0x12B, 16, true),
  sizedInt(0x111, 16, true),
  sizedInt(0x146, 16, true),
  sizedInt(0x14D, 16, true),
  sizedInt(0x137, 16, true),
  sizedInt(0xF4, 16, true),
  sizedInt(0xF5, 16, true),
  sizedInt(0xF6, 16, true),
  sizedInt(0xF7, 16, true),
  sizedInt(0xF8, 16, true),
  sizedInt(0x173, 16, true),
  sizedInt(0xFA, 16, true),
  sizedInt(0xFB, 16, true),
  sizedInt(0xFC, 16, true),
  sizedInt(0x169, 16, true),
  sizedInt(0x16B, 16, true),
  sizedInt(0x2D9, 16, true),
]);

export function decode_next_codepoint(bytes) {
  return $lookup_table_8bit.decode_next_codepoint(bytes, lookup_table);
}
